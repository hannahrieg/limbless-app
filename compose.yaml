services:
    nginx:
        build: ./services/nginx
        ports:
            - 80:80
        volumes:
            - static_volume:/usr/src/app/static
        depends_on:
            limbless-server:
                condition: service_healthy
                restart: true

    limbless-server:
        build: ./services/limbless-server
        command: "gunicorn -w 4 --bind 0.0.0.0:5000 'wsgi:app'"
        volumes:
            - ./uploads:/usr/src/app/uploads
            - ./logs/limbless:/usr/src/app/logs
            - ./data:/usr/src/app/data:ro
            - static_volume:/usr/src/app/static
        env_file: .env
        expose:
            - 5000
        depends_on:
            postgres:
                condition: service_healthy
                restart: true

        healthcheck:
            test: ["CMD", "curl", "-f", "http://limbless-server:5000/status"]
            start-interval: 5s  # 5s interval when container is starting
            interval: 300s      # check every 5 minutes
            timeout: 5s         # wait for the command to complete
            retries: 5

    postgres:
        container_name: postgres
        image: postgres:16rc1-alpine3.17
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        restart: always
        volumes:
            - ./db/postgres:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
            start-interval: 5s  # 5s interval when container is starting
            interval: 300s      # check every 5 minutes
            timeout: 5s         # wait for the command to complete
            retries: 5

    pgadmin:
        container_name: pgadmin
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        ports:
            - 5050:80
        restart: always
        volumes:
            - ./db/pgadmin:/var/lib/pgadmin
        depends_on:
            postgres:
                condition: service_healthy
                restart: true

volumes:
    static_volume: