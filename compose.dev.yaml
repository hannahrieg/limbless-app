version: "3.8"

services:
    limbless-app:
        container_name: limbless-app-dev
        build:
            context: ./services/limbless-app
            dockerfile: Dockerfile.dev
        command: "python3 /usr/src/app/debug.py --host=${LIMBLESS_HOST} --port=${LIMBLESS_PORT}"
        volumes:
            - ./services/limbless-app/limbless-server:/usr/src/app/limbless-server
            - ./services/limbless-app/limbless-db:/usr/src/app/limbless-db
            - ./uploads:/usr/src/app/uploads
            - ./media:/usr/src/app/media
            - ./logs/limbless:/usr/src/app/logs
            - ./data:/usr/src/app/data:ro
            - ./services/limbless-app/static/images:/usr/src/app/static/images:ro
            - ./services/limbless-app/static/js:/usr/src/app/static/js:ro
            - ./services/limbless-app/static/resources:/usr/src/app/static/resources:ro
            - compiled_css:/usr/src/app/static/style/compiled:ro
            - ./services/limbless-app/templates:/usr/src/app/templates:ro
        env_file: .dev.env
        ports:
            - ${LIMBLESS_PORT}:${LIMBLESS_PORT}
        expose:
            - ${LIMBLESS_PORT}
        depends_on:
            postgres:
                condition: service_healthy
                restart: true
            sass-compiler:
                condition: service_started
                restart: true

        healthcheck:
            test: ["CMD", "curl", "-f", "http://limbless-app:${LIMBLESS_PORT}/status"]
            interval: 10s
            timeout: 10s
            retries: 5

    sass-compiler:
        container_name: sass-compiler-dev
        image: apluslms/develop-sass
        volumes:
            - ./services/limbless-app/static/style/sass:/usr/src/app/static/style/sass:ro
            - compiled_css:/usr/src/app/static/style/compiled
        command: "sass --watch /usr/src/app/static/style/sass:/usr/src/app/static/style/compiled"
        healthcheck:
            test: ["CMD", "ps", "cax", "|", "grep", "-wq", "sass"]
            interval: 10s
            timeout: 10s
            retries: 5

    postgres:
        container_name: postgres-dev
        image: postgres:16rc1-alpine3.17
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        expose:
            - ${POSTGRES_PORT}
        ports:
            - ${POSTGRES_PORT}:${POSTGRES_PORT}
        restart: always
        volumes:
            - ./db/postgres:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
            interval: 10s
            timeout: 10s
            retries: 5

    pgadmin:
        container_name: pgadmin-dev
        image: dpage/pgadmin4:latest
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        ports:
            - 5050:80
        restart: always
        volumes:
            - ./db/pgadmin:/var/lib/pgadmin
        depends_on:
            postgres:
                condition: service_healthy
                restart: true

volumes:
    compiled_css: